import fetch from 'node-fetch';
import { Octokit } from '@octokit/rest';

async function fetchCryptoData() {
  const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false');

  if (response.ok) {
    const data = await response.json();
    const content = `Top 10 Cryptocurrencies:\n${data.map(crypto => `${crypto.name}: $${crypto.current_price}`).join('\n')}`;

    return content;
  } else {
    throw new Error('Failed to fetch data from CoinGecko');
  }
}

async function pushToGitHub(content, token, username, repository) {
  const octokit = new Octokit({ auth: token });
  const owner = username;
  const repo = repository;
  const branch = 'main';

  const contentEncoded = Buffer.from(content).toString('base64');

  try {
    const file = await octokit.repos.createOrUpdateFileContents({
      owner,
      repo,
      path: `crypto_data_${Date.now()}.txt`,
      message: 'Daily Crypto Data Update',
      content: contentEncoded,
      branch,
    });

    console.log('File created:', file.data);
  } catch (error) {
    console.error('Error creating file:', error);
  }
}

async function performDailyActivity(token, username, repository) {
  try {
    const cryptoContent = await fetchCryptoData();
    await pushToGitHub(cryptoContent, token, username, repository);
  } catch (error) {
    console.error('Error during daily activity:', error);
  }
}

async function main() {
  const gitTokens = [
    '-',
    'YOUR_GITHUB_TOKEN_2',
    // Add other tokens if needed
  ];

  const username = '-';
  const repository = '-';

  // Run the daily activity for each GitHub token
  for (let index = 0; index < gitTokens.length; index++) {
    console.log(`Running daily activity with token ${index + 1}...`);
    await performDailyActivity(gitTokens[index], username, repository);
  }
}

main();
